/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General macros to create 2D/extruded-2D meshes













// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;







/*
// This is equivalent to below
convertToMeters 1;






*/

/*
convertToMeters 0.001;

// Tube Length






*/

// Thickness of 2D slab


// Base z


// Top z


// Number of cells front to back


// Number of cells per block each direction in rotor


// Number of cells per block each direction in outer




// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //





// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// Angle Calculations much of this will not be used


































// The xx-- and yy-- are sets of repeated x and y coordinates















// This is the actual 
























































// This is the actual 

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (-10 7.5 -0.05) // Vertex p00b = 0 
    (10 7.5 -0.05) // Vertex p01b = 1 
    (-4.24264069423857 4.24264069423857 -0.05) // Vertex p02b = 2 
    (-4.18607213335401 4.18607215589471 -0.05) // Vertex p03b = 3 
    (4.18607214838114 4.18607214086758 -0.05) // Vertex p04b = 4 
    (4.24264069423857 4.24264069423857 -0.05) // Vertex p05b = 5 
    (-1 1 -0.05) // Vertex p06b = 6 
    (1 1 -0.05) // Vertex p07b = 7 
    (-1 -1 -0.05) // Vertex p08b = 8 
    (1 -1 -0.05) // Vertex p09b = 9 
    (-4.24264069423857 -4.24264069423857 -0.05) // Vertex p10b = 10 
    (-4.18607216340828 -4.18607212584045 -0.05) // Vertex p11b = 11 
    (4.18607211832688 -4.18607217092184 -0.05) // Vertex p12b = 12 
    (4.24264069423857 -4.24264069423857 -0.05) // Vertex p13b = 13 
    (-10 -7.5 -0.05) // Vertex p14b = 14 
    (10 -7.5 -0.05) // Vertex p15b = 15 
    
    
    
    (-10 7.5 0.05) // Vertex p00t = 16 
    (10 7.5 0.05) // Vertex p01t = 17 
    (-4.24264069423857 4.24264069423857 0.05) // Vertex p02t = 18 
    (-4.18607213335401 4.18607215589471 0.05) // Vertex p03t = 19 
    (4.18607214838114 4.18607214086758 0.05) // Vertex p04t = 20 
    (4.24264069423857 4.24264069423857 0.05) // Vertex p05t = 21 
    (-1 1 0.05) // Vertex p06t = 22 
    (1 1 0.05) // Vertex p07t = 23 
    (-1 -1 0.05) // Vertex p08t = 24 
    (1 -1 0.05) // Vertex p09t = 25 
    (-4.24264069423857 -4.24264069423857 0.05) // Vertex p10t = 26 
    (-4.18607216340828 -4.18607212584045 0.05) // Vertex p11t = 27 
    (4.18607211832688 -4.18607217092184 0.05) // Vertex p12t = 28 
    (4.24264069423857 -4.24264069423857 0.05) // Vertex p13t = 29 
    (-10 -7.5 0.05) // Vertex p14t = 30 
    (10 -7.5 0.05) // Vertex p15t = 31 
);

blocks
(
    // block 0
    hex (15 1 5 13 31 17 21 29)
    (41 17 1)
    simpleGrading (1 1 1)
    
    // block 1
    hex (5 1 0 2 21 17 16 18)
    (17 40 1)
    simpleGrading (1 1 1)
    
    // block 2
    hex (10 2 0 14 26 18 16 30)
    (41 17 1)
    simpleGrading (1 1 1)
    
    // block 3
    hex (15 13 10 14 31 29 26 30)
    (17 40 1)
    simpleGrading (1 1 1)
    
    
    // block 4
    hex (12 4 7 9 28 20 23 25)
    rotor
    (20 20 1)
    simpleGrading (1 1 1)
    
    // block 5
    hex (7 4 3 6 23 20 19 22)
    rotor
    (20 20 1)
    simpleGrading (1 1 1)
    
    // block 6
    hex (8 6 3 11 24 22 19 27)
    rotor
    (20 20 1)
    simpleGrading (1 1 1)
    
    // block 7
    hex (12 9 8 11 28 25 24 27)
    rotor
    (20 13 1)
    simpleGrading (1 1 1)
    
);

edges
(
  arc 13 5 (6 0 -0.05)
  arc 5 2 (1.07693804217925e-08 6 -0.05)
  arc 2 10 (-6 2.15387608435849e-08 -0.05)
  arc 10 13 (-3.23081412653774e-08 -6 -0.05)
  
  arc 12 4 (5.92 0 -0.05)
  arc 4 3 (1.06257886828352e-08 5.92 -0.05)
  arc 3 11 (-5.92 2.12515773656705e-08 -0.05)
  arc 11 12 (-3.18773660485057e-08 -5.92 -0.05)
  
  arc 29 21 (6 0 0.05)
  arc 21 18 (1.07693804217925e-08 6 0.05)
  arc 18 26 (-6 2.15387608435849e-08 0.05)
  arc 26 29 (-3.23081412653774e-08 -6 0.05)
  
  arc 28 20 (5.92 0 0.05)
  arc 20 19 (1.06257886828352e-08 5.92 0.05)
  arc 19 27 (-5.92 2.12515773656705e-08 0.05)
  arc 27 28 (-3.18773660485057e-08 -5.92 0.05)
);

boundary
(

    inlet
    {
        type            patch;
        faces
        (
            (14 0 16 30)
        );
    }
    
    outlet
    {
        type            patch;
        faces
        (
            (15 1 17 31)
        );
    }
    
    dymWall
    {
        type            wall;
        faces
        (
            (6 7 23 22)
            (7 9 25 23)
            (9 8 24 25)
            (8 6 22 24)
            
        );
    }
    
    AMI1
    {
        type            cyclicAMI;
        neighbourPatch  AMI2;
        transform       noOrdering;
        faces
        (
            (12 4 20 28)
            (4 3 19 20)
            (3 11 27 19)
            (11 12 28 27)
        );
    }
    
    AMI2
    {
        type            cyclicAMI;
        neighbourPatch  AMI1;
        transform       noOrdering;
        faces
        (
            (13 5 21 29)
            (5 2 18 21)
            (2 10 26 18)
            (10 13 29 26)
        );
    }
    
    walls
    {
        type            wall;
        faces
        (
            (0 1 17 16)
            (14 15 31 30)
        );
    }
    
    
    front
    {
        type            empty;
        faces
        (
            (31 29 21 17)
            (21 18 16 17)
            (26 30 16 18)
            (31 30 26 29)
            (28 25 23 20)
            (23 22 19 20)
            (24 27 19 22)
            (28 27 24 25)
            
        );
    }
    
    back
    {
        type            empty;
        faces
        (
            (15 1 5 13)
            (5 1 0 2)
            (10 2 0 14)
            (15 13 10 14)
            (12 4 7 9)
            (7 4 3 6)
            (8 6 3 11)
            (12 9 8 11)
            
        );
    }
);

// ************************************************************************* //
