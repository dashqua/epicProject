/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// General macros to create 2D/extruded-2D meshes












// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

// Tube Length







// radius


// test


//gap radius










// side






// Thickness of 2D slab


// Base z


// Top z


// Number of cells radially between hub and impeller tip


// Number of cells radially between baffle tip and tank


// Number of cells azimuthally in each of the 8 blocks


// Number of cells azimuthally in each of the 8 blocks


// Number of cells azimuthally in each of the 8 blocks


// Number of cells in the thickness of the slab


// Number of cells in the thickness of the slab


// Number of cells in the thickness of the slab


// Number of cells in the thickness of the slab





// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
















































































































































































































// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (61.3786440032816 -3.86161369357791 -0.5) // Vertex p00b = 0 
    (61.3786440032816 3.86161369357791 -0.5) // Vertex p01b = 1 
    (29.6278995804889 53.8928340918203 -0.5) // Vertex p02b = 2 
    (-29.62775657091 53.8929127119225 -0.5) // Vertex p03b = 3 
    (-61.3786337559268 3.86177656730758 -0.5) // Vertex p04b = 4 
    (-61.3786542502041 -3.86145081982104 -0.5) // Vertex p05b = 5 
    (-29.628042589859 -53.8927554713386 -0.5) // Vertex p06b = 6 
    (29.6276135611227 -53.8929913316452 -0.5) // Vertex p07b = 7 
    (62.3766707350423 -3.92440416014016 -0.5) // Vertex p08b = 8 
    (62.3766707350423 3.92440416014016 -0.5) // Vertex p09b = 9 
    (30.1096540452122 54.7691403372158 -0.5) // Vertex p10b = 10 
    (-30.1095087102744 54.7692202356936 -0.5) // Vertex p11b = 11 
    (-62.3766603210638 3.92456968222315 -0.5) // Vertex p12b = 12 
    (-62.3766811485814 -3.92423863802951 -0.5) // Vertex p13b = 13 
    (-30.109799379938 -54.7690604383522 -0.5) // Vertex p14b = 14 
    (30.1093633751247 -54.7693001337858 -0.5) // Vertex p15b = 15 
    (62.5 -437.5 -0.5) // Vertex p16b = 16 
    (187.5 -437.5 -0.5) // Vertex p17b = 17 
    (-587.5 -62.5 -0.5) // Vertex p18b = 18 
    (-62.5 -62.5 -0.5) // Vertex p19b = 19 
    (-62.5 -62.5 -0.5) // Vertex p20b = 20 
    (62.5 -62.5 -0.5) // Vertex p21b = 21 
    (187.5 -62.5 -0.5) // Vertex p22b = 22 
    (-587.5 62.5 -0.5) // Vertex p23b = 23 
    (-62.5 62.5 -0.5) // Vertex p24b = 24 
    (-62.5 62.5 -0.5) // Vertex p25b = 25 
    (62.5 62.5 -0.5) // Vertex p26b = 26 
    (187.5 62.5 -0.5) // Vertex p27b = 27 
    (62.5 537.5 -0.5) // Vertex p28b = 28 
    (187.5 537.5 -0.5) // Vertex p29b = 29 
    (62.5 987.5 -0.5) // Vertex p30b = 30 
    (187.5 987.5 -0.5) // Vertex p31b = 31 
    (87.5 687.5 -0.5) // Vertex p32b = 32 
    (162.5 687.5 -0.5) // Vertex p33b = 33 
    (112.5 837.5 -0.5) // Vertex p34b = 34 
    (137.5 837.5 -0.5) // Vertex p35b = 35 
    (112.5 987.5 -0.5) // Vertex p36b = 36 
    (137.5 987.5 -0.5) // Vertex p37b = 37 
    
    
    (61.3786440032816 -3.86161369357791 0.5) // Vertex p00t = 38 
    (61.3786440032816 3.86161369357791 0.5) // Vertex p01t = 39 
    (29.6278995804889 53.8928340918203 0.5) // Vertex p02t = 40 
    (-29.62775657091 53.8929127119225 0.5) // Vertex p03t = 41 
    (-61.3786337559268 3.86177656730758 0.5) // Vertex p04t = 42 
    (-61.3786542502041 -3.86145081982104 0.5) // Vertex p05t = 43 
    (-29.628042589859 -53.8927554713386 0.5) // Vertex p06t = 44 
    (29.6276135611227 -53.8929913316452 0.5) // Vertex p07t = 45 
    (62.3766707350423 -3.92440416014016 0.5) // Vertex p08t = 46 
    (62.3766707350423 3.92440416014016 0.5) // Vertex p09t = 47 
    (30.1096540452122 54.7691403372158 0.5) // Vertex p10t = 48 
    (-30.1095087102744 54.7692202356936 0.5) // Vertex p11t = 49 
    (-62.3766603210638 3.92456968222315 0.5) // Vertex p12t = 50 
    (-62.3766811485814 -3.92423863802951 0.5) // Vertex p13t = 51 
    (-30.109799379938 -54.7690604383522 0.5) // Vertex p14t = 52 
    (30.1093633751247 -54.7693001337858 0.5) // Vertex p15t = 53 
    (62.5 -437.5 0.5) // Vertex p16t = 54 
    (187.5 -437.5 0.5) // Vertex p17t = 55 
    (-587.5 -62.5 0.5) // Vertex p18t = 56 
    (-62.5 -62.5 0.5) // Vertex p19t = 57 
    (-62.5 -62.5 0.5) // Vertex p20t = 58 
    (62.5 -62.5 0.5) // Vertex p21t = 59 
    (187.5 -62.5 0.5) // Vertex p22t = 60 
    (-587.5 62.5 0.5) // Vertex p23t = 61 
    (-62.5 62.5 0.5) // Vertex p24t = 62 
    (-62.5 62.5 0.5) // Vertex p25t = 63 
    (62.5 62.5 0.5) // Vertex p26t = 64 
    (187.5 62.5 0.5) // Vertex p27t = 65 
    (62.5 537.5 0.5) // Vertex p28t = 66 
    (187.5 537.5 0.5) // Vertex p29t = 67 
    (62.5 987.5 0.5) // Vertex p30t = 68 
    (187.5 987.5 0.5) // Vertex p31t = 69 
    (87.5 687.5 0.5) // Vertex p32t = 70 
    (162.5 687.5 0.5) // Vertex p33t = 71 
    (112.5 837.5 0.5) // Vertex p34t = 72 
    (137.5 837.5 0.5) // Vertex p35t = 73 
    (112.5 987.5 0.5) // Vertex p36t = 74 
    (137.5 987.5 0.5) // Vertex p37t = 75 
);

blocks
(
    
    
    // block
    hex (16 17 22 21 54 55 60 59)
    (10 20 1)
    simpleGrading (1 1 1)
    
    // block
    hex (21 22 27 26 59 60 65 64)
    (10 20 1)
    simpleGrading (1 1 1)
    
    // block
    hex (26 27 29 28 64 65 67 66)
    (10 20 1)
    simpleGrading (1 1 1)
    
    // block
    hex (28 29 31 30 66 67 69 68)
    (10 30 1)
    simpleGrading (1 1 1)
    
    // block
    hex (20 21 26 25 58 59 64 63)
    (20 20 1)
    simpleGrading (1 1 1)
    
    
    // block
    hex (18 20 25 23 56 58 63 61)
    (20 20 1)
    simpleGrading (0.5 1 1)
    
    
    
);

edges
(

);

boundary
(

    inlet
    {
        type            patch;
        faces
        (
            (16 17 55 54)
        );
    }
    
    outlet1
    {
        type            patch;
        faces
        (
            (18 23 61 56)
        );
    }
    
    
    outlet2
    {
        type            patch;
        faces
        (
            (30 31 69 68)
        );
    }
    
    
    
    walls_pre
    {
        type            wall;
        faces
        (
            (23 25 63 61)
            (25 26 64 63)
            (26 28 66 64)
            (28 30 68 66)
            (31 29 67 69)
            (29 27 65 67)
            (27 22 60 65)
            (22 17 55 60)
            (16 21 59 54)
            (21 20 58 59)
            (20 18 56 58)
            
        );
    }
    
    symFront
    {
        type            symmetryPlane;
        faces
        (
            (54 55 60 59)
            (59 60 65 64)
            (64 65 67 66)
            (66 67 69 68)
            (58 59 64 63)
            (56 58 63 61)
            
        );
    }
    
    symBack
    {
        type            symmetryPlane;
        faces
        (
            (16 21 22 17)
            (21 26 27 22)
            (26 28 29 27)
            (28 30 31 29)
            (20 25 26 21)
            (18 23 25 20)
            
        );
    }
    
);

// ************************************************************************* //
